/* vim: set expandtab filetype=haskell : */

tempo = 120 ;

song =
    let h = half ; d = double ;
        tri a b c = [ a @h[b c] ]
    in #[
        @d[ ^3 ^2 | ^1 7  | 6 5 | 6 7

          | ^1 7  | 6  5  | 4 3 | 4 2 ]

        @h[ ^1 7 ^1 1 _7 5 2 3
          | 1 ^1 7 6 7 ^3 ^5 ^6
          | ^[4 3 2 4] ^4 ^3 ^1 7
          | 6 5 4 3 2 4 3 2
          
          | 1 2 3 4 5 2 5 4
          | 3 6 5 4 5 4 3 2
          | 1 _6 6 7 ^1 7 6 5
          | 4 3 2 6 5 6 5 4 ]

        3 ^3 (^2,2)   | (^1,2) (^2,2) | ^1 ^3 ^2 ^4

        @h[ ^(tri 5 3 4) ^(tri 5 3 4) @h[^5 5 6 7 ^[1 2 3 4]]
          | ^(tri 3 1 2) (tri ^3 3 4) @h[5 6 5 4 5 3 4 5]
          | (tri 4 6 5) (tri 4 3 2) @h[3 2 1 2 3 4 5 6]

          | (tri 4 6 5) (tri 6 7 ^1) @h^[2 3 4 5]
          | ^[ (tri 3 1 2) (tri 3 2 1) @h[2 _7 1 2 3 2 1 _7]]
          | (tri ^1 6 7) (tri ^1 1 2) @h[3 4 3 2 | 3 ^1 7 ^1]

          | (tri 6 ^1 7) (tri 6 5 4) @h[5 4 3 4 5 6 7 1]
          | (tri 6 ^1 7) (tri ^1 7 6) @h[7 ^1 ^2 ^1 7 ^1 6 7] ]

        @h[ ^3 3 4 3 2 ^2 ^3 ^2
          | ^1 3 1 6 5 _5 _4 _5
          | _6 6 7 6 7 _5 _4 _5
          | _6 6 5 6 7 7 6 7

          | 1 ^1 ^2 ^1 7 _7 1 _7
          | _6 6 5 6 7 _7 3 2
          | 1 ^1 ^2 ^4 ^3 3 5 ^3
          | ^[1 4 3 4] ^2 5 4 5 ]

        @h[ (tri 3 ^1 7) ^1 3 (tri 5 5 6) 7 5
          | (tri 3 ^1 7) ^3 ^1 ^(tri 3 3 2) ^1 7
          | (tri 6 6 5) 6 7 ^(tri 1 3 2) ^1 ^3 ]
        ] ;

double = scaleTime 2 ;
half = scaleTime 0.5 ;

scaleTime ratio =
    let go n =
        if (number? n)
            (n, ratio)
        (if (note? n)
            (pitch n, * ratio (time n), velocity n)
        {"half : not a note" n})
    in mapMelody go ;

mapMelody f m =
    if (number? m)
        (f m)
    (if (note? m)
        (f m)
    (if (seq? m)
        (if (nil? m)
            []
            (seq (mapMelody f (car m)) (mapMelody f (cdr m))))
    (if (par? m)
        (if (nil? m)
            {}
            (par (mapMelody f (car m)) (mapMelody f (cdr m))))
    {"mapMelody : not a melody" m}))) ;
