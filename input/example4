/* vim: set expandtab filetype=haskell : */

song = { m1 (decreaseVelocity 0.8 (m2 a b c e)) } ;

mapMelody f m =
    if (number? m)
        (f m)
    (if (note? m)
        (f m)
    (if (seq? m)
        (if (nil? m)
            []
            (seq (mapMelody f (car m)) (mapMelody f (cdr m))))
    (if (par? m)
        (if (nil? m)
            {}
            (par (mapMelody f (car m)) (mapMelody f (cdr m))))
    {"mapMelody : not a melody" m}))) ;

decreaseVelocity ratio =
    let go n =
        if (number? n)
            (n, 1, * ratio 127)
        (if (note? n)
            (pitch n, time n, * ratio (velocity n))
            "decreaseVelocity : not a note")
    in mapMelody go ;

m1 = [
 _5 3 2 1 | (mordent _5 4) | _5 3 2 1 | (_6, 4) |
 _6 4 3 2 | (_7, 3) 5 | 5 5 4 2 | (3, 4) |
 _5 3 2 1 | (_5, 4) | _5 3 2 1 | (_6, 4) |
 _6 4 3 2 | 5 5 (5, 2) | 6 5 4 2 | (1, 4) |
 3 3 (3, 2) | 3 3 (3, 2) | 3 5 1 2 | (3, 4) |
 4 4 (4, 2) | 4 3 (3, 2) | 3 2 2 1 | (2, 2) (5, 2) |
 3 3 (3, 2)| 3 3 (3, 2) | 3 5 1 2 | (3, 4) |
 4 4 (4, 2)| 4 3 (3, 2) | 5 5 4 2 | (1, 2) (chord 1 2) |
] ;

chord p d = {
(p, d)
(+ p 2, d)
(+ p 4, d)
(+ p 7, d) } ;

mordent p d = [ (p, / d 4) (+ p 1, / d 4) (p, / d 2) ] ;

/*
The following short melodies are used as parameter for the melody m2.
*/

a = [_1 _3 __5 _3 |] ;
b = [__6 _1 __4 _1 |] ;
c = [ __7 _2 __5 _2 |] ;
e = [ __7 _2 _2 _2 |] ;

/*
The corresponding representation for the above short melodies in staff notation is:


The following melody function takes in four short melodies as its parameters and uses them to build a longer melody.
*/

m2 a b c d =
    let
        tmp = [ (1, / 1 2) (1, / 1 2) ]
    in
        [
            a a a b
            b c c a
            a a a b
            b c d 1 tmp 1 1 |
            a a a a
            b a a e
            a a a a
            b a e (_1, 2) (1, 2) |
        ] ;
